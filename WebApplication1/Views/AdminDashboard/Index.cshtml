@model IEnumerable<OnlineShopping.ViewModel.RegisterViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "_AdminLayout";
}



<div class="container-fluid">
    <div class="row">
        <div class="col-6 p-5">
            <div class="text-center lead text-black fw-bold">Number of Products per Category</div>
            <div class="w-100 position-relative">
                <canvas id="numberOfProductsForEachCategory"></canvas>
            </div>
        </div>

        <div class="col-6 p-5">
            <div class="text-center lead text-black fw-bold">Top 10 Products by Price</div>
            <div class="w-100 position-relative">
                <canvas id="top10ProductsByPrice"></canvas>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx_1 = document.getElementById('numberOfProductsForEachCategory');

    new Chart(ctx_1, {
        type: 'doughnut',
        data: {
            labels: @Html.Raw(Json.Serialize(ViewData["numberOfProductsForEachCategory_Names"])),
            datasets: [{
                data: @Html.Raw(Json.Serialize(ViewData["numberOfProductsForEachCategory_Counts"]))
                }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });
</script>

<script>
    const ctx_2 = document.getElementById('top10ProductsByPrice');

    new Chart(ctx_2, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(ViewData["top10ProductsByPrice_Names"])),
            datasets: [{
                axis: 'y',
                label: 'Price',
                data: @Html.Raw(Json.Serialize(ViewData["top10ProductsByPrice_Prices"]))
                        }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            indexAxis: 'y'
        }
    });
</script>
